<?xml version="1.0"?>
<ruleset name="WordPress Plugin Coding Standards">
    <description>A custom set of code standard rules for WordPress plugins.</description>

    <!-- What to scan -->
    <file>.</file>
    <exclude-pattern>/vendor/</exclude-pattern>
    <exclude-pattern>/node_modules/</exclude-pattern>
    <exclude-pattern>/tests/</exclude-pattern>
    <exclude-pattern>/tmp/</exclude-pattern>
    <exclude-pattern>/build/</exclude-pattern>
    <exclude-pattern>/coverage/</exclude-pattern>

    <!-- How to scan -->
    <arg value="sp"/> <!-- Show sniff and progress -->
    <arg name="colors"/>
    <arg name="extensions" value="php"/>
    <arg name="parallel" value="8"/>

    <!-- Rules: WordPress Coding Standards -->
    <config name="minimum_supported_wp_version" value="5.8"/>

    <rule ref="WordPress">
        <!-- Allow short array syntax -->
        <exclude name="Generic.Arrays.DisallowShortArraySyntax"/>
    </rule>

    <rule ref="WordPress-Core"/>
    <rule ref="WordPress-Docs"/>
    <rule ref="WordPress-Extra"/>

    <!-- Allow . in hook names -->
    <rule ref="WordPress.NamingConventions.ValidHookName">
        <properties>
            <property name="additionalWordDelimiters" value="."/>
        </properties>
    </rule>

    <!-- Verify that the text_domain is set to the desired text-domain -->
    <rule ref="WordPress.WP.I18n">
        <properties>
            <property name="text_domain" type="array" value="tactical-game-organizer"/>
        </properties>
    </rule>

    <!-- Verify that everything in the global namespace is prefixed with a theme specific prefix -->
    <rule ref="WordPress.NamingConventions.PrefixAllGlobals">
        <properties>
            <property name="prefixes" type="array" value="tgo,tactical_game_organizer"/>
        </properties>
    </rule>

    <!-- Allow PSR-4 class names in class-*.php files -->
    <rule ref="WordPress.Files.FileName">
        <properties>
            <property name="strict_class_file_names" value="false"/>
        </properties>
    </rule>

    <!-- Encourage use of wp_safe_redirect() to avoid any possible XSS attacks -->
    <rule ref="WordPress.Security.SafeRedirect"/>

    <!-- Verify that a nonce check is done before using values in superglobals -->
    <rule ref="WordPress.Security.NonceVerification"/>

    <!-- Discourage use of deprecated WordPress functions -->
    <rule ref="WordPress.WP.DeprecatedFunctions"/>

    <!-- Discourage use of discouraged WordPress functions -->
    <rule ref="WordPress.WP.DiscouragedFunctions"/>

    <!-- Encourage use of wp_safe_remote_get() over wp_remote_get() -->
    <rule ref="WordPress.WP.SafeRedirect"/>
</ruleset> 